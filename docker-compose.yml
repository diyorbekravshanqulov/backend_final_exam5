# version: '3.3'

# services:
#   postgres:
#     container_name: postgres-data
#     image: postgres:14.0-alpine
#     restart: always
#     environment:
#       - POSTGRES_USER=${TYPEORM_USERNAME}
#       - POSTGRES_PASSWORD=${TYPEORM_PASSWORD}
#       - POSTGRES_DB=${TYPEORM_DATABASE}
#     volumes:
#       - ./pgdata:/var/lib/postgresql/data
#     ports:
#       - ${TYPEORM_LOCAL_PORT}:${TYPEORM_PORT}
#   app:
#     container_name: crm_nest_graphql
#     # build: 
#     #   context: ./
#     image: dyrbkrvshqlv/hardwork-app
#     depends_on:
#       - postgres
#     restart: unless-stopped
#     ports:
#       - ${API_LOCAL_PORT}:${API_PORT}
#     environment:
#       - API_PORT=${API_PORT}
#       - API_LOCAL_PORT=${API_LOCAL_PORT}
#       - API_HOST=${API_HOST}
#       - TYPEORM_CONNECTION=${TYPEORM_CONNECTION}
#       - TYPEORM_USERNAME=${TYPEORM_USERNAME}
#       - TYPEORM_PASSWORD=${TYPEORM_PASSWORD}
#       - TYPEORM_DATABASE=${TYPEORM_DATABASE}
#       - TYPEORM_PORT=${TYPEORM_PORT}
#       - TYPEORM_LOCAL_PORT=${TYPEORM_LOCAL_PORT}
#       - TYPEORM_HOST=postgres


version: '3.8'

services:
  db:
    container_name: postgres
    image: postgres
    environment:
       POSTGRES_USER: postgres
       POSTGRES_PASSWORD: root
       PGDATA: /data/postgres
       POSTGRES_DB: hardwork
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - "5332:5332"
    # networks:
    #   - db
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
  app:
    container_name: crm_nest_graphql
    # build: .
    image: dyrbkrvshqlv/hardwork-app
    depends_on:
      - db
    restart: unless-stopped
    ports:
      - ${API_LOCAL_PORT}:${API_PORT}
    environment:
      - API_PORT=${API_PORT}
      - API_LOCAL_PORT=${API_LOCAL_PORT}
      - API_HOST=${API_HOST}
      - TYPEORM_CONNECTION=${TYPEORM_CONNECTION}
      - TYPEORM_USERNAME=${TYPEORM_USERNAME}
      - TYPEORM_PASSWORD=${TYPEORM_PASSWORD}
      - TYPEORM_DATABASE=${TYPEORM_DATABASE}
      - TYPEORM_PORT=${TYPEORM_PORT}
      - TYPEORM_LOCAL_PORT=${TYPEORM_LOCAL_PORT}
      - TYPEORM_HOST=postgres
    # networks:
    #   - db

  # networks:
  #   db:
  #     driver: bridge

    